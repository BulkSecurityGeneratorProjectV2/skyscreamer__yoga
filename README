Inspired by LinkedInâ€™s JavaOne presentation on building flexible REST interfaces (http://blog.linkedin.com/2009/07/08/brandon-duncan-java-one-building-consistent-restful-apis-in-a-high-performance-environment/), Yoga is a framework for supporting REST-like URI requests with field selectors. 

Yoga selectors allow you to:

1. Combine multiple queries into a single "relational" query
2. Make expensive data optional

You can make any existing REST API built in Java (for now) significantly faster and more flexible.

For example, say I have a music social network site, and I want to find out the songs of my friends' favorite artists.  In a traditional RESTful approach I would navigate the object tree, making several sets of queries.

1) Get my friends
2) Get their favorite artists
3) Get those artists albums
4) Get those albums songs

This would be a LOT of queries.  In Yoga, you can do the same with a single query:

    GET /user/1.json?selector=:(friends:(favoriteArtists:(albums:(songs))))

Advantage               Which gets you
----------              --------------
Fewer requests          More speed
Fewer sockets           Lower cost
Simpler client code     Happier client develoeprs

The Yoga framework automates most of this for you if you have an existing RESTEasy or RESTful Spring MVC application.  You'll just need to add a few annotations and a few lines of configuration and you'll be up and running.

Once the initial REST types have been defined and the basic queries defined, there is no server-side programming required to change the client queries.